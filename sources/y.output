Grammaire

    0 $accept: program $end

    1 primary_expression: IDENTIFIER
    2                   | CONSTANT
    3                   | '(' expression ')'

    4 postfix_expression: primary_expression
    5                   | postfix_expression '(' ')'
    6                   | postfix_expression '(' argument_expression_list ')'
    7                   | postfix_expression '.' IDENTIFIER
    8                   | postfix_expression PTR_OP IDENTIFIER

    9 argument_expression_list: expression
   10                         | argument_expression_list ',' expression

   11 unary_expression: postfix_expression
   12                 | unary_operator unary_expression
   13                 | SIZEOF unary_expression

   14 unary_operator: '&'
   15               | '*'
   16               | '-'

   17 multiplicative_expression: unary_expression
   18                          | multiplicative_expression STAR unary_expression
   19                          | multiplicative_expression SLASH unary_expression

   20 additive_expression: multiplicative_expression
   21                    | additive_expression PLUS multiplicative_expression
   22                    | additive_expression MINUS multiplicative_expression

   23 relational_expression: additive_expression
   24                      | relational_expression '<' additive_expression
   25                      | relational_expression '>' additive_expression
   26                      | relational_expression LE_OP additive_expression
   27                      | relational_expression GE_OP additive_expression

   28 equality_expression: relational_expression
   29                    | equality_expression EQ_OP relational_expression
   30                    | equality_expression NE_OP relational_expression

   31 logical_and_expression: equality_expression
   32                       | logical_and_expression AND_OP equality_expression

   33 logical_or_expression: logical_and_expression
   34                      | logical_or_expression OR_OP logical_and_expression

   35 expression: logical_or_expression
   36           | unary_expression '=' expression

   37 declaration: declaration_specifiers declarator ';'
   38            | struct_specifier ';'

   39 declaration_specifiers: EXTERN type_specifier
   40                       | type_specifier

   41 type_specifier: VOID
   42               | INT
   43               | struct_specifier

   44 struct_specifier: STRUCT IDENTIFIER '{' struct_declaration_list '}'
   45                 | STRUCT '{' struct_declaration_list '}'
   46                 | STRUCT IDENTIFIER

   47 struct_declaration_list: struct_declaration
   48                        | struct_declaration_list struct_declaration

   49 struct_declaration: type_specifier declarator ';'

   50 declarator: '*' direct_declarator
   51           | direct_declarator

   52 direct_declarator: IDENTIFIER
   53                  | '(' declarator ')'
   54                  | direct_declarator '(' parameter_list ')'
   55                  | direct_declarator '(' ')'

   56 parameter_list: parameter_declaration
   57               | parameter_list ',' parameter_declaration

   58 parameter_declaration: declaration_specifiers declarator

   59 statement: compound_statement
   60          | expression_statement
   61          | if_statement
   62          | else_statement
   63          | iteration_statement
   64          | jump_statement

   65 compound_statement: '{' '}'
   66                   | '{' statement_list '}'
   67                   | '{' declaration_list '}'
   68                   | '{' declaration_list statement_list '}'

   69 declaration_list: declaration
   70                 | declaration_list declaration

   71 statement_list: statement
   72               | statement_list statement

   73 expression_statement: ';'
   74                     | expression ';'

   75 if_statement: IF '(' expression ')' statement

   76 else_statement: ELSE statement

   77 iteration_statement: WHILE '(' expression ')' statement
   78                    | FOR '(' expression_statement expression_statement expression ')' statement

   79 jump_statement: RETURN ';'
   80               | RETURN expression ';'

   81 program: external_declaration
   82        | program external_declaration

   83 external_declaration: function_definition
   84                     | declaration

   85 function_definition: declaration_specifiers declarator compound_statement


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'&' (38) 14
'(' (40) 3 5 6 53 54 55 75 77 78
')' (41) 3 5 6 53 54 55 75 77 78
'*' (42) 15 50
',' (44) 10 57
'-' (45) 16
'.' (46) 7
';' (59) 37 38 49 73 74 79 80
'<' (60) 24
'=' (61) 36
'>' (62) 25
'{' (123) 44 45 65 66 67 68
'}' (125) 44 45 65 66 67 68
error (256)
IDENTIFIER (258) 1 7 8 44 46 52
CONSTANT (259) 2
SIZEOF (260) 13
PTR_OP (261) 8
LE_OP (262) 26
GE_OP (263) 27
EQ_OP (264) 29
NE_OP (265) 30
AND_OP (266) 32
OR_OP (267) 34
EXTERN (268) 39
INT (269) 42
VOID (270) 41
STRUCT (271) 44 45 46
IF (272) 75
ELSE (273) 76
WHILE (274) 77
FOR (275) 78
RETURN (276) 79 80
PLUS (277) 21
MINUS (278) 22
STAR (279) 18
SLASH (280) 19


Non-terminaux, suivis des règles où ils apparaissent

$accept (39)
    à gauche: 0
primary_expression (40)
    à gauche: 1 2 3, à droite: 4
postfix_expression (41)
    à gauche: 4 5 6 7 8, à droite: 5 6 7 8 11
argument_expression_list (42)
    à gauche: 9 10, à droite: 6 10
unary_expression (43)
    à gauche: 11 12 13, à droite: 12 13 17 18 19 36
unary_operator (44)
    à gauche: 14 15 16, à droite: 12
multiplicative_expression (45)
    à gauche: 17 18 19, à droite: 18 19 20 21 22
additive_expression (46)
    à gauche: 20 21 22, à droite: 21 22 23 24 25 26 27
relational_expression (47)
    à gauche: 23 24 25 26 27, à droite: 24 25 26 27 28 29 30
equality_expression (48)
    à gauche: 28 29 30, à droite: 29 30 31 32
logical_and_expression (49)
    à gauche: 31 32, à droite: 32 33 34
logical_or_expression (50)
    à gauche: 33 34, à droite: 34 35
expression (51)
    à gauche: 35 36, à droite: 3 9 10 36 74 75 77 78 80
declaration (52)
    à gauche: 37 38, à droite: 69 70 84
declaration_specifiers (53)
    à gauche: 39 40, à droite: 37 58 85
type_specifier (54)
    à gauche: 41 42 43, à droite: 39 40 49
struct_specifier (55)
    à gauche: 44 45 46, à droite: 38 43
struct_declaration_list (56)
    à gauche: 47 48, à droite: 44 45 48
struct_declaration (57)
    à gauche: 49, à droite: 47 48
declarator (58)
    à gauche: 50 51, à droite: 37 49 53 58 85
direct_declarator (59)
    à gauche: 52 53 54 55, à droite: 50 51 54 55
parameter_list (60)
    à gauche: 56 57, à droite: 54 57
parameter_declaration (61)
    à gauche: 58, à droite: 56 57
statement (62)
    à gauche: 59 60 61 62 63 64, à droite: 71 72 75 76 77 78
compound_statement (63)
    à gauche: 65 66 67 68, à droite: 59 85
declaration_list (64)
    à gauche: 69 70, à droite: 67 68 70
statement_list (65)
    à gauche: 71 72, à droite: 66 68 72
expression_statement (66)
    à gauche: 73 74, à droite: 60 78
if_statement (67)
    à gauche: 75, à droite: 61
else_statement (68)
    à gauche: 76, à droite: 62
iteration_statement (69)
    à gauche: 77 78, à droite: 63
jump_statement (70)
    à gauche: 79 80, à droite: 64
program (71)
    à gauche: 81 82, à droite: 0 82
external_declaration (72)
    à gauche: 83 84, à droite: 81 82
function_definition (73)
    à gauche: 85, à droite: 83


État 0

    0 $accept: . program $end

    EXTERN  décalage et aller à l'état 1
    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    declaration             aller à l'état 5
    declaration_specifiers  aller à l'état 6
    type_specifier          aller à l'état 7
    struct_specifier        aller à l'état 8
    program                 aller à l'état 9
    external_declaration    aller à l'état 10
    function_definition     aller à l'état 11


État 1

   39 declaration_specifiers: EXTERN . type_specifier

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    type_specifier    aller à l'état 12
    struct_specifier  aller à l'état 13


État 2

   42 type_specifier: INT .

    $défaut  réduction par utilisation de la règle 42 (type_specifier)


État 3

   41 type_specifier: VOID .

    $défaut  réduction par utilisation de la règle 41 (type_specifier)


État 4

   44 struct_specifier: STRUCT . IDENTIFIER '{' struct_declaration_list '}'
   45                 | STRUCT . '{' struct_declaration_list '}'
   46                 | STRUCT . IDENTIFIER

    IDENTIFIER  décalage et aller à l'état 14
    '{'         décalage et aller à l'état 15


État 5

   84 external_declaration: declaration .

    $défaut  réduction par utilisation de la règle 84 (external_declaration)


État 6

   37 declaration: declaration_specifiers . declarator ';'
   85 function_definition: declaration_specifiers . declarator compound_statement

    IDENTIFIER  décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '*'         décalage et aller à l'état 18

    declarator         aller à l'état 19
    direct_declarator  aller à l'état 20


État 7

   40 declaration_specifiers: type_specifier .

    $défaut  réduction par utilisation de la règle 40 (declaration_specifiers)


État 8

   38 declaration: struct_specifier . ';'
   43 type_specifier: struct_specifier .

    ';'  décalage et aller à l'état 21

    $défaut  réduction par utilisation de la règle 43 (type_specifier)


État 9

    0 $accept: program . $end
   82 program: program . external_declaration

    $end    décalage et aller à l'état 22
    EXTERN  décalage et aller à l'état 1
    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    declaration             aller à l'état 5
    declaration_specifiers  aller à l'état 6
    type_specifier          aller à l'état 7
    struct_specifier        aller à l'état 8
    external_declaration    aller à l'état 23
    function_definition     aller à l'état 11


État 10

   81 program: external_declaration .

    $défaut  réduction par utilisation de la règle 81 (program)


État 11

   83 external_declaration: function_definition .

    $défaut  réduction par utilisation de la règle 83 (external_declaration)


État 12

   39 declaration_specifiers: EXTERN type_specifier .

    $défaut  réduction par utilisation de la règle 39 (declaration_specifiers)


État 13

   43 type_specifier: struct_specifier .

    $défaut  réduction par utilisation de la règle 43 (type_specifier)


État 14

   44 struct_specifier: STRUCT IDENTIFIER . '{' struct_declaration_list '}'
   46                 | STRUCT IDENTIFIER .

    '{'  décalage et aller à l'état 24

    $défaut  réduction par utilisation de la règle 46 (struct_specifier)


État 15

   45 struct_specifier: STRUCT '{' . struct_declaration_list '}'

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    type_specifier           aller à l'état 25
    struct_specifier         aller à l'état 13
    struct_declaration_list  aller à l'état 26
    struct_declaration       aller à l'état 27


État 16

   52 direct_declarator: IDENTIFIER .

    $défaut  réduction par utilisation de la règle 52 (direct_declarator)


État 17

   53 direct_declarator: '(' . declarator ')'

    IDENTIFIER  décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '*'         décalage et aller à l'état 18

    declarator         aller à l'état 28
    direct_declarator  aller à l'état 20


État 18

   50 declarator: '*' . direct_declarator

    IDENTIFIER  décalage et aller à l'état 16
    '('         décalage et aller à l'état 17

    direct_declarator  aller à l'état 29


État 19

   37 declaration: declaration_specifiers declarator . ';'
   85 function_definition: declaration_specifiers declarator . compound_statement

    ';'  décalage et aller à l'état 30
    '{'  décalage et aller à l'état 31

    compound_statement  aller à l'état 32


État 20

   51 declarator: direct_declarator .
   54 direct_declarator: direct_declarator . '(' parameter_list ')'
   55                  | direct_declarator . '(' ')'

    '('  décalage et aller à l'état 33

    $défaut  réduction par utilisation de la règle 51 (declarator)


État 21

   38 declaration: struct_specifier ';' .

    $défaut  réduction par utilisation de la règle 38 (declaration)


État 22

    0 $accept: program $end .

    $défaut  accepter


État 23

   82 program: program external_declaration .

    $défaut  réduction par utilisation de la règle 82 (program)


État 24

   44 struct_specifier: STRUCT IDENTIFIER '{' . struct_declaration_list '}'

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    type_specifier           aller à l'état 25
    struct_specifier         aller à l'état 13
    struct_declaration_list  aller à l'état 34
    struct_declaration       aller à l'état 27


État 25

   49 struct_declaration: type_specifier . declarator ';'

    IDENTIFIER  décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '*'         décalage et aller à l'état 18

    declarator         aller à l'état 35
    direct_declarator  aller à l'état 20


État 26

   45 struct_specifier: STRUCT '{' struct_declaration_list . '}'
   48 struct_declaration_list: struct_declaration_list . struct_declaration

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4
    '}'     décalage et aller à l'état 36

    type_specifier      aller à l'état 25
    struct_specifier    aller à l'état 13
    struct_declaration  aller à l'état 37


État 27

   47 struct_declaration_list: struct_declaration .

    $défaut  réduction par utilisation de la règle 47 (struct_declaration_list)


État 28

   53 direct_declarator: '(' declarator . ')'

    ')'  décalage et aller à l'état 38


État 29

   50 declarator: '*' direct_declarator .
   54 direct_declarator: direct_declarator . '(' parameter_list ')'
   55                  | direct_declarator . '(' ')'

    '('  décalage et aller à l'état 33

    $défaut  réduction par utilisation de la règle 50 (declarator)


État 30

   37 declaration: declaration_specifiers declarator ';' .

    $défaut  réduction par utilisation de la règle 37 (declaration)


État 31

   65 compound_statement: '{' . '}'
   66                   | '{' . statement_list '}'
   67                   | '{' . declaration_list '}'
   68                   | '{' . declaration_list statement_list '}'

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    EXTERN      décalage et aller à l'état 1
    INT         décalage et aller à l'état 2
    VOID        décalage et aller à l'état 3
    STRUCT      décalage et aller à l'état 4
    IF          décalage et aller à l'état 42
    ELSE        décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50
    ';'         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 31
    '}'         décalage et aller à l'état 52

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 63
    declaration                aller à l'état 64
    declaration_specifiers     aller à l'état 65
    type_specifier             aller à l'état 7
    struct_specifier           aller à l'état 8
    statement                  aller à l'état 66
    compound_statement         aller à l'état 67
    declaration_list           aller à l'état 68
    statement_list             aller à l'état 69
    expression_statement       aller à l'état 70
    if_statement               aller à l'état 71
    else_statement             aller à l'état 72
    iteration_statement        aller à l'état 73
    jump_statement             aller à l'état 74


État 32

   85 function_definition: declaration_specifiers declarator compound_statement .

    $défaut  réduction par utilisation de la règle 85 (function_definition)


État 33

   54 direct_declarator: direct_declarator '(' . parameter_list ')'
   55                  | direct_declarator '(' . ')'

    EXTERN  décalage et aller à l'état 1
    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4
    ')'     décalage et aller à l'état 75

    declaration_specifiers  aller à l'état 76
    type_specifier          aller à l'état 7
    struct_specifier        aller à l'état 13
    parameter_list          aller à l'état 77
    parameter_declaration   aller à l'état 78


État 34

   44 struct_specifier: STRUCT IDENTIFIER '{' struct_declaration_list . '}'
   48 struct_declaration_list: struct_declaration_list . struct_declaration

    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4
    '}'     décalage et aller à l'état 79

    type_specifier      aller à l'état 25
    struct_specifier    aller à l'état 13
    struct_declaration  aller à l'état 37


État 35

   49 struct_declaration: type_specifier declarator . ';'

    ';'  décalage et aller à l'état 80


État 36

   45 struct_specifier: STRUCT '{' struct_declaration_list '}' .

    $défaut  réduction par utilisation de la règle 45 (struct_specifier)


État 37

   48 struct_declaration_list: struct_declaration_list struct_declaration .

    $défaut  réduction par utilisation de la règle 48 (struct_declaration_list)


État 38

   53 direct_declarator: '(' declarator ')' .

    $défaut  réduction par utilisation de la règle 53 (direct_declarator)


État 39

    1 primary_expression: IDENTIFIER .

    $défaut  réduction par utilisation de la règle 1 (primary_expression)


État 40

    2 primary_expression: CONSTANT .

    $défaut  réduction par utilisation de la règle 2 (primary_expression)


État 41

   13 unary_expression: SIZEOF . unary_expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression  aller à l'état 53
    postfix_expression  aller à l'état 54
    unary_expression    aller à l'état 81
    unary_operator      aller à l'état 56


État 42

   75 if_statement: IF . '(' expression ')' statement

    '('  décalage et aller à l'état 82


État 43

   76 else_statement: ELSE . statement

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    IF          décalage et aller à l'état 42
    ELSE        décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50
    ';'         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 31

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 63
    statement                  aller à l'état 83
    compound_statement         aller à l'état 67
    expression_statement       aller à l'état 70
    if_statement               aller à l'état 71
    else_statement             aller à l'état 72
    iteration_statement        aller à l'état 73
    jump_statement             aller à l'état 74


État 44

   77 iteration_statement: WHILE . '(' expression ')' statement

    '('  décalage et aller à l'état 84


État 45

   78 iteration_statement: FOR . '(' expression_statement expression_statement expression ')' statement

    '('  décalage et aller à l'état 85


État 46

   79 jump_statement: RETURN . ';'
   80               | RETURN . expression ';'

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50
    ';'         décalage et aller à l'état 86

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 87


État 47

    3 primary_expression: '(' . expression ')'

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 88


État 48

   14 unary_operator: '&' .

    $défaut  réduction par utilisation de la règle 14 (unary_operator)


État 49

   15 unary_operator: '*' .

    $défaut  réduction par utilisation de la règle 15 (unary_operator)


État 50

   16 unary_operator: '-' .

    $défaut  réduction par utilisation de la règle 16 (unary_operator)


État 51

   73 expression_statement: ';' .

    $défaut  réduction par utilisation de la règle 73 (expression_statement)


État 52

   65 compound_statement: '{' '}' .

    $défaut  réduction par utilisation de la règle 65 (compound_statement)


État 53

    4 postfix_expression: primary_expression .

    $défaut  réduction par utilisation de la règle 4 (postfix_expression)


État 54

    5 postfix_expression: postfix_expression . '(' ')'
    6                   | postfix_expression . '(' argument_expression_list ')'
    7                   | postfix_expression . '.' IDENTIFIER
    8                   | postfix_expression . PTR_OP IDENTIFIER
   11 unary_expression: postfix_expression .

    PTR_OP  décalage et aller à l'état 89
    '('     décalage et aller à l'état 90
    '.'     décalage et aller à l'état 91

    $défaut  réduction par utilisation de la règle 11 (unary_expression)


État 55

   17 multiplicative_expression: unary_expression .
   36 expression: unary_expression . '=' expression

    '='  décalage et aller à l'état 92

    $défaut  réduction par utilisation de la règle 17 (multiplicative_expression)


État 56

   12 unary_expression: unary_operator . unary_expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression  aller à l'état 53
    postfix_expression  aller à l'état 54
    unary_expression    aller à l'état 93
    unary_operator      aller à l'état 56


État 57

   18 multiplicative_expression: multiplicative_expression . STAR unary_expression
   19                          | multiplicative_expression . SLASH unary_expression
   20 additive_expression: multiplicative_expression .

    STAR   décalage et aller à l'état 94
    SLASH  décalage et aller à l'état 95

    $défaut  réduction par utilisation de la règle 20 (additive_expression)


État 58

   21 additive_expression: additive_expression . PLUS multiplicative_expression
   22                    | additive_expression . MINUS multiplicative_expression
   23 relational_expression: additive_expression .

    PLUS   décalage et aller à l'état 96
    MINUS  décalage et aller à l'état 97

    $défaut  réduction par utilisation de la règle 23 (relational_expression)


État 59

   24 relational_expression: relational_expression . '<' additive_expression
   25                      | relational_expression . '>' additive_expression
   26                      | relational_expression . LE_OP additive_expression
   27                      | relational_expression . GE_OP additive_expression
   28 equality_expression: relational_expression .

    LE_OP  décalage et aller à l'état 98
    GE_OP  décalage et aller à l'état 99
    '<'    décalage et aller à l'état 100
    '>'    décalage et aller à l'état 101

    $défaut  réduction par utilisation de la règle 28 (equality_expression)


État 60

   29 equality_expression: equality_expression . EQ_OP relational_expression
   30                    | equality_expression . NE_OP relational_expression
   31 logical_and_expression: equality_expression .

    EQ_OP  décalage et aller à l'état 102
    NE_OP  décalage et aller à l'état 103

    $défaut  réduction par utilisation de la règle 31 (logical_and_expression)


État 61

   32 logical_and_expression: logical_and_expression . AND_OP equality_expression
   33 logical_or_expression: logical_and_expression .

    AND_OP  décalage et aller à l'état 104

    $défaut  réduction par utilisation de la règle 33 (logical_or_expression)


État 62

   34 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   35 expression: logical_or_expression .

    OR_OP  décalage et aller à l'état 105

    $défaut  réduction par utilisation de la règle 35 (expression)


État 63

   74 expression_statement: expression . ';'

    ';'  décalage et aller à l'état 106


État 64

   69 declaration_list: declaration .

    $défaut  réduction par utilisation de la règle 69 (declaration_list)


État 65

   37 declaration: declaration_specifiers . declarator ';'

    IDENTIFIER  décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '*'         décalage et aller à l'état 18

    declarator         aller à l'état 107
    direct_declarator  aller à l'état 20


État 66

   71 statement_list: statement .

    $défaut  réduction par utilisation de la règle 71 (statement_list)


État 67

   59 statement: compound_statement .

    $défaut  réduction par utilisation de la règle 59 (statement)


État 68

   67 compound_statement: '{' declaration_list . '}'
   68                   | '{' declaration_list . statement_list '}'
   70 declaration_list: declaration_list . declaration

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    EXTERN      décalage et aller à l'état 1
    INT         décalage et aller à l'état 2
    VOID        décalage et aller à l'état 3
    STRUCT      décalage et aller à l'état 4
    IF          décalage et aller à l'état 42
    ELSE        décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50
    ';'         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 31
    '}'         décalage et aller à l'état 108

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 63
    declaration                aller à l'état 109
    declaration_specifiers     aller à l'état 65
    type_specifier             aller à l'état 7
    struct_specifier           aller à l'état 8
    statement                  aller à l'état 66
    compound_statement         aller à l'état 67
    statement_list             aller à l'état 110
    expression_statement       aller à l'état 70
    if_statement               aller à l'état 71
    else_statement             aller à l'état 72
    iteration_statement        aller à l'état 73
    jump_statement             aller à l'état 74


État 69

   66 compound_statement: '{' statement_list . '}'
   72 statement_list: statement_list . statement

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    IF          décalage et aller à l'état 42
    ELSE        décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50
    ';'         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 31
    '}'         décalage et aller à l'état 111

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 63
    statement                  aller à l'état 112
    compound_statement         aller à l'état 67
    expression_statement       aller à l'état 70
    if_statement               aller à l'état 71
    else_statement             aller à l'état 72
    iteration_statement        aller à l'état 73
    jump_statement             aller à l'état 74


État 70

   60 statement: expression_statement .

    $défaut  réduction par utilisation de la règle 60 (statement)


État 71

   61 statement: if_statement .

    $défaut  réduction par utilisation de la règle 61 (statement)


État 72

   62 statement: else_statement .

    $défaut  réduction par utilisation de la règle 62 (statement)


État 73

   63 statement: iteration_statement .

    $défaut  réduction par utilisation de la règle 63 (statement)


État 74

   64 statement: jump_statement .

    $défaut  réduction par utilisation de la règle 64 (statement)


État 75

   55 direct_declarator: direct_declarator '(' ')' .

    $défaut  réduction par utilisation de la règle 55 (direct_declarator)


État 76

   58 parameter_declaration: declaration_specifiers . declarator

    IDENTIFIER  décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '*'         décalage et aller à l'état 18

    declarator         aller à l'état 113
    direct_declarator  aller à l'état 20


État 77

   54 direct_declarator: direct_declarator '(' parameter_list . ')'
   57 parameter_list: parameter_list . ',' parameter_declaration

    ')'  décalage et aller à l'état 114
    ','  décalage et aller à l'état 115


État 78

   56 parameter_list: parameter_declaration .

    $défaut  réduction par utilisation de la règle 56 (parameter_list)


État 79

   44 struct_specifier: STRUCT IDENTIFIER '{' struct_declaration_list '}' .

    $défaut  réduction par utilisation de la règle 44 (struct_specifier)


État 80

   49 struct_declaration: type_specifier declarator ';' .

    $défaut  réduction par utilisation de la règle 49 (struct_declaration)


État 81

   13 unary_expression: SIZEOF unary_expression .

    $défaut  réduction par utilisation de la règle 13 (unary_expression)


État 82

   75 if_statement: IF '(' . expression ')' statement

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 116


État 83

   76 else_statement: ELSE statement .

    $défaut  réduction par utilisation de la règle 76 (else_statement)


État 84

   77 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 117


État 85

   78 iteration_statement: FOR '(' . expression_statement expression_statement expression ')' statement

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50
    ';'         décalage et aller à l'état 51

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 63
    expression_statement       aller à l'état 118


État 86

   79 jump_statement: RETURN ';' .

    $défaut  réduction par utilisation de la règle 79 (jump_statement)


État 87

   80 jump_statement: RETURN expression . ';'

    ';'  décalage et aller à l'état 119


État 88

    3 primary_expression: '(' expression . ')'

    ')'  décalage et aller à l'état 120


État 89

    8 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  décalage et aller à l'état 121


État 90

    5 postfix_expression: postfix_expression '(' . ')'
    6                   | postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    ')'         décalage et aller à l'état 122
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    argument_expression_list   aller à l'état 123
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 124


État 91

    7 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  décalage et aller à l'état 125


État 92

   36 expression: unary_expression '=' . expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 126


État 93

   12 unary_expression: unary_operator unary_expression .

    $défaut  réduction par utilisation de la règle 12 (unary_expression)


État 94

   18 multiplicative_expression: multiplicative_expression STAR . unary_expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression  aller à l'état 53
    postfix_expression  aller à l'état 54
    unary_expression    aller à l'état 127
    unary_operator      aller à l'état 56


État 95

   19 multiplicative_expression: multiplicative_expression SLASH . unary_expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression  aller à l'état 53
    postfix_expression  aller à l'état 54
    unary_expression    aller à l'état 128
    unary_operator      aller à l'état 56


État 96

   21 additive_expression: additive_expression PLUS . multiplicative_expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 130


État 97

   22 additive_expression: additive_expression MINUS . multiplicative_expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 131


État 98

   26 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 132


État 99

   27 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 133


État 100

   24 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 134


État 101

   25 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 135


État 102

   29 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 136


État 103

   30 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 137


État 104

   32 logical_and_expression: logical_and_expression AND_OP . equality_expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 138


État 105

   34 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 129
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 139


État 106

   74 expression_statement: expression ';' .

    $défaut  réduction par utilisation de la règle 74 (expression_statement)


État 107

   37 declaration: declaration_specifiers declarator . ';'

    ';'  décalage et aller à l'état 30


État 108

   67 compound_statement: '{' declaration_list '}' .

    $défaut  réduction par utilisation de la règle 67 (compound_statement)


État 109

   70 declaration_list: declaration_list declaration .

    $défaut  réduction par utilisation de la règle 70 (declaration_list)


État 110

   68 compound_statement: '{' declaration_list statement_list . '}'
   72 statement_list: statement_list . statement

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    IF          décalage et aller à l'état 42
    ELSE        décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50
    ';'         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 31
    '}'         décalage et aller à l'état 140

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 63
    statement                  aller à l'état 112
    compound_statement         aller à l'état 67
    expression_statement       aller à l'état 70
    if_statement               aller à l'état 71
    else_statement             aller à l'état 72
    iteration_statement        aller à l'état 73
    jump_statement             aller à l'état 74


État 111

   66 compound_statement: '{' statement_list '}' .

    $défaut  réduction par utilisation de la règle 66 (compound_statement)


État 112

   72 statement_list: statement_list statement .

    $défaut  réduction par utilisation de la règle 72 (statement_list)


État 113

   58 parameter_declaration: declaration_specifiers declarator .

    $défaut  réduction par utilisation de la règle 58 (parameter_declaration)


État 114

   54 direct_declarator: direct_declarator '(' parameter_list ')' .

    $défaut  réduction par utilisation de la règle 54 (direct_declarator)


État 115

   57 parameter_list: parameter_list ',' . parameter_declaration

    EXTERN  décalage et aller à l'état 1
    INT     décalage et aller à l'état 2
    VOID    décalage et aller à l'état 3
    STRUCT  décalage et aller à l'état 4

    declaration_specifiers  aller à l'état 76
    type_specifier          aller à l'état 7
    struct_specifier        aller à l'état 13
    parameter_declaration   aller à l'état 141


État 116

   75 if_statement: IF '(' expression . ')' statement

    ')'  décalage et aller à l'état 142


État 117

   77 iteration_statement: WHILE '(' expression . ')' statement

    ')'  décalage et aller à l'état 143


État 118

   78 iteration_statement: FOR '(' expression_statement . expression_statement expression ')' statement

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50
    ';'         décalage et aller à l'état 51

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 63
    expression_statement       aller à l'état 144


État 119

   80 jump_statement: RETURN expression ';' .

    $défaut  réduction par utilisation de la règle 80 (jump_statement)


État 120

    3 primary_expression: '(' expression ')' .

    $défaut  réduction par utilisation de la règle 3 (primary_expression)


État 121

    8 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $défaut  réduction par utilisation de la règle 8 (postfix_expression)


État 122

    5 postfix_expression: postfix_expression '(' ')' .

    $défaut  réduction par utilisation de la règle 5 (postfix_expression)


État 123

    6 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   10 argument_expression_list: argument_expression_list . ',' expression

    ')'  décalage et aller à l'état 145
    ','  décalage et aller à l'état 146


État 124

    9 argument_expression_list: expression .

    $défaut  réduction par utilisation de la règle 9 (argument_expression_list)


État 125

    7 postfix_expression: postfix_expression '.' IDENTIFIER .

    $défaut  réduction par utilisation de la règle 7 (postfix_expression)


État 126

   36 expression: unary_expression '=' expression .

    $défaut  réduction par utilisation de la règle 36 (expression)


État 127

   18 multiplicative_expression: multiplicative_expression STAR unary_expression .

    $défaut  réduction par utilisation de la règle 18 (multiplicative_expression)


État 128

   19 multiplicative_expression: multiplicative_expression SLASH unary_expression .

    $défaut  réduction par utilisation de la règle 19 (multiplicative_expression)


État 129

   17 multiplicative_expression: unary_expression .

    $défaut  réduction par utilisation de la règle 17 (multiplicative_expression)


État 130

   18 multiplicative_expression: multiplicative_expression . STAR unary_expression
   19                          | multiplicative_expression . SLASH unary_expression
   21 additive_expression: additive_expression PLUS multiplicative_expression .

    STAR   décalage et aller à l'état 94
    SLASH  décalage et aller à l'état 95

    $défaut  réduction par utilisation de la règle 21 (additive_expression)


État 131

   18 multiplicative_expression: multiplicative_expression . STAR unary_expression
   19                          | multiplicative_expression . SLASH unary_expression
   22 additive_expression: additive_expression MINUS multiplicative_expression .

    STAR   décalage et aller à l'état 94
    SLASH  décalage et aller à l'état 95

    $défaut  réduction par utilisation de la règle 22 (additive_expression)


État 132

   21 additive_expression: additive_expression . PLUS multiplicative_expression
   22                    | additive_expression . MINUS multiplicative_expression
   26 relational_expression: relational_expression LE_OP additive_expression .

    PLUS   décalage et aller à l'état 96
    MINUS  décalage et aller à l'état 97

    $défaut  réduction par utilisation de la règle 26 (relational_expression)


État 133

   21 additive_expression: additive_expression . PLUS multiplicative_expression
   22                    | additive_expression . MINUS multiplicative_expression
   27 relational_expression: relational_expression GE_OP additive_expression .

    PLUS   décalage et aller à l'état 96
    MINUS  décalage et aller à l'état 97

    $défaut  réduction par utilisation de la règle 27 (relational_expression)


État 134

   21 additive_expression: additive_expression . PLUS multiplicative_expression
   22                    | additive_expression . MINUS multiplicative_expression
   24 relational_expression: relational_expression '<' additive_expression .

    PLUS   décalage et aller à l'état 96
    MINUS  décalage et aller à l'état 97

    $défaut  réduction par utilisation de la règle 24 (relational_expression)


État 135

   21 additive_expression: additive_expression . PLUS multiplicative_expression
   22                    | additive_expression . MINUS multiplicative_expression
   25 relational_expression: relational_expression '>' additive_expression .

    PLUS   décalage et aller à l'état 96
    MINUS  décalage et aller à l'état 97

    $défaut  réduction par utilisation de la règle 25 (relational_expression)


État 136

   24 relational_expression: relational_expression . '<' additive_expression
   25                      | relational_expression . '>' additive_expression
   26                      | relational_expression . LE_OP additive_expression
   27                      | relational_expression . GE_OP additive_expression
   29 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  décalage et aller à l'état 98
    GE_OP  décalage et aller à l'état 99
    '<'    décalage et aller à l'état 100
    '>'    décalage et aller à l'état 101

    $défaut  réduction par utilisation de la règle 29 (equality_expression)


État 137

   24 relational_expression: relational_expression . '<' additive_expression
   25                      | relational_expression . '>' additive_expression
   26                      | relational_expression . LE_OP additive_expression
   27                      | relational_expression . GE_OP additive_expression
   30 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  décalage et aller à l'état 98
    GE_OP  décalage et aller à l'état 99
    '<'    décalage et aller à l'état 100
    '>'    décalage et aller à l'état 101

    $défaut  réduction par utilisation de la règle 30 (equality_expression)


État 138

   29 equality_expression: equality_expression . EQ_OP relational_expression
   30                    | equality_expression . NE_OP relational_expression
   32 logical_and_expression: logical_and_expression AND_OP equality_expression .

    EQ_OP  décalage et aller à l'état 102
    NE_OP  décalage et aller à l'état 103

    $défaut  réduction par utilisation de la règle 32 (logical_and_expression)


État 139

   32 logical_and_expression: logical_and_expression . AND_OP equality_expression
   34 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  décalage et aller à l'état 104

    $défaut  réduction par utilisation de la règle 34 (logical_or_expression)


État 140

   68 compound_statement: '{' declaration_list statement_list '}' .

    $défaut  réduction par utilisation de la règle 68 (compound_statement)


État 141

   57 parameter_list: parameter_list ',' parameter_declaration .

    $défaut  réduction par utilisation de la règle 57 (parameter_list)


État 142

   75 if_statement: IF '(' expression ')' . statement

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    IF          décalage et aller à l'état 42
    ELSE        décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50
    ';'         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 31

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 63
    statement                  aller à l'état 147
    compound_statement         aller à l'état 67
    expression_statement       aller à l'état 70
    if_statement               aller à l'état 71
    else_statement             aller à l'état 72
    iteration_statement        aller à l'état 73
    jump_statement             aller à l'état 74


État 143

   77 iteration_statement: WHILE '(' expression ')' . statement

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    IF          décalage et aller à l'état 42
    ELSE        décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50
    ';'         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 31

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 63
    statement                  aller à l'état 148
    compound_statement         aller à l'état 67
    expression_statement       aller à l'état 70
    if_statement               aller à l'état 71
    else_statement             aller à l'état 72
    iteration_statement        aller à l'état 73
    jump_statement             aller à l'état 74


État 144

   78 iteration_statement: FOR '(' expression_statement expression_statement . expression ')' statement

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 149


État 145

    6 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $défaut  réduction par utilisation de la règle 6 (postfix_expression)


État 146

   10 argument_expression_list: argument_expression_list ',' . expression

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 150


État 147

   75 if_statement: IF '(' expression ')' statement .

    $défaut  réduction par utilisation de la règle 75 (if_statement)


État 148

   77 iteration_statement: WHILE '(' expression ')' statement .

    $défaut  réduction par utilisation de la règle 77 (iteration_statement)


État 149

   78 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement

    ')'  décalage et aller à l'état 151


État 150

   10 argument_expression_list: argument_expression_list ',' expression .

    $défaut  réduction par utilisation de la règle 10 (argument_expression_list)


État 151

   78 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    IDENTIFIER  décalage et aller à l'état 39
    CONSTANT    décalage et aller à l'état 40
    SIZEOF      décalage et aller à l'état 41
    IF          décalage et aller à l'état 42
    ELSE        décalage et aller à l'état 43
    WHILE       décalage et aller à l'état 44
    FOR         décalage et aller à l'état 45
    RETURN      décalage et aller à l'état 46
    '('         décalage et aller à l'état 47
    '&'         décalage et aller à l'état 48
    '*'         décalage et aller à l'état 49
    '-'         décalage et aller à l'état 50
    ';'         décalage et aller à l'état 51
    '{'         décalage et aller à l'état 31

    primary_expression         aller à l'état 53
    postfix_expression         aller à l'état 54
    unary_expression           aller à l'état 55
    unary_operator             aller à l'état 56
    multiplicative_expression  aller à l'état 57
    additive_expression        aller à l'état 58
    relational_expression      aller à l'état 59
    equality_expression        aller à l'état 60
    logical_and_expression     aller à l'état 61
    logical_or_expression      aller à l'état 62
    expression                 aller à l'état 63
    statement                  aller à l'état 152
    compound_statement         aller à l'état 67
    expression_statement       aller à l'état 70
    if_statement               aller à l'état 71
    else_statement             aller à l'état 72
    iteration_statement        aller à l'état 73
    jump_statement             aller à l'état 74


État 152

   78 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $défaut  réduction par utilisation de la règle 78 (iteration_statement)
